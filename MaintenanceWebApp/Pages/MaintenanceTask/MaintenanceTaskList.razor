@page "/MaintenanceTaskList"

@using MaintenanceWebApp.Data
@using Microsoft.EntityFrameworkCore
@inject DataContext DataContext
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-6">
        <h3>Maintenance Task List</h3>
    </div>
    <div class="col-6">
        <button class="btn btn-outline-primary btn-xs float-end" @onclick="() => AddMaintenanceTask()">New Task</button>
    </div>
</div>


@if (MaintenanceTasks.Count != 0)
{
    <table class="table table-striped">
        <thead>
            <tr class="table-dark">
                <th class="visually-hidden">ID</th>
                <th>Requestor</th>
                <th>Division</th>
                <th>Request Date</th>
                <th>Status</th>
                <th>UserID</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var maintenanceTask in MaintenanceTasks)
            {
                <tr>
                    <td>@maintenanceTask.TaskID</td>
                    <td>@maintenanceTask.Requestor</td>
                    <td>@maintenanceTask.Division</td>
                    <td>@maintenanceTask.RequestDate</td>
                    <td>@maintenanceTask.Status</td>
                    <td>@maintenanceTask.UserID</td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditMaintenanceTask(maintenanceTask)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => SoftDeleteMaintenanceTask(maintenanceTask)">Soft Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else{
    <p>No Tasks Found.</p>
}


@code {
    private List<MaintenanceTask> MaintenanceTasks { get; set; } = new List<MaintenanceTask>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        MaintenanceTasks = await DataContext.MaintenanceTasks.ToListAsync();
    }

    private void AddMaintenanceTask()
    {
        NavigationManager.NavigateTo($"/AddMaintenanceTask/");
    }

    private void EditMaintenanceTask(MaintenanceTask maintenanceTask)
    {
        NavigationManager.NavigateTo($"/EditMaintenanceTask/{maintenanceTask.TaskID}");
    }


    private void SoftDeleteMaintenanceTask(MaintenanceTask maintenanceTask)
    {
        NavigationManager.NavigateTo($"/DeleteMaintenanceTask/{maintenanceTask.TaskID}");
    }
}
