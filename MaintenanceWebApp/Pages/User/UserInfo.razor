@page "/UserInfo/{Id}"

@using MaintenanceWebApp.Data
@using MaintenanceWebApp.Services
@using Microsoft.EntityFrameworkCore
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

@* Services *@
@inject CRUDService CRUDService
@inject NotificationService NotificationService

@* Roles Authorize *@
@attribute [Authorize(Roles = "Admin, Supervisor, Manager, Terminal Manager, Maintenance Supervisor, Maintenance")]

<div class="card shadow-sm">
    @* Header Halaman *@
    <div class="card-header bg-light border-primary d-flex justify-content-between align-items-center">
        <ul class="nav nav-tabs card-header-tabs">
            <AuthorizeView Roles="Admin, Terminal Manager, Maintenance Supervisor">
                <Authorized>
                    <li class="nav-item">
                        <a style="cursor: pointer;" @onclick="NavigateToUserList" class="nav-link" aria-label="Kembali ke Daftar Pengguna">
                            <span class="oi oi-chevron-left"></span>
                        </a>
                    </li>
                </Authorized>
            </AuthorizeView>
            <li class="nav-item">
                <span class="nav-link active" aria-current="page">Informasi Pengguna</span>
            </li>
        </ul>
    </div>

    @* Status Pemuatan *@
    @if (isLoading)
    {
        <div class="card-body text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Memuat...</span>
            </div>
            <p class="mt-2">Memuat data pengguna...</p>
        </div>
    }
    @* Status Data Tidak Ditemukan *@
    else if (user is null)
    {
        <div class="card-body text-center py-5">
            <div class="alert alert-warning" role="alert">
                <h4 class="alert-heading">Data Tidak Ditemukan!</h4>
                <p>Pengguna dengan ID yang diberikan tidak ada atau terjadi kesalahan saat memuat data.</p>
                <hr>
                <p class="mb-0">Mohon cek kembali ID pengguna atau hubungi administrator.</p>
            </div>
        </div>
    }
    @* Detail Pengguna *@
    else
    {
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-3 text-center">
                    @* Foto Profil *@
                    <div class="profile-photo-container mb-3">
                        <img class="img-fluid" src="@CreateFilePath(user.UserPhoto)" alt="Foto Profil Pengguna" />
                    </div>

                    @* Tanda Tangan *@
                    @if (user.Role != "Admin")
                    {
                        <div class="signature-section mt-4">
                            <h5 class="mb-3">Tanda Tangan Digital</h5>
                            <img class="signature-photo" src="@CreateFilePath(user.Signature)" alt="Tanda Tangan Pengguna" />
                        </div>
                    }
                </div>


                @* Bagian Informasi Detail *@
                <div class="col-md-9 px-5">
                    <div class="row g-3">
                        <div class="col-md-12">
                            <label class="form-label text-muted">Nama Lengkap</label>
                            <p class="info-text">@user.FullName</p>
                        </div>
                        <div class="col-md-12">
                            <label class="form-label text-muted">Email</label>
                            <p class="info-text">@user.Email</p>
                        </div>
                        <div class="col-md-12">
                            <label class="form-label text-muted">Nomor Telepon</label>
                            <p class="info-text">@user.PhoneNumber</p>
                        </div>
                        <div class="col-md-12">
                            <label class="form-label text-muted">Role</label>
                            <p class="info-text">@user.Role</p>
                        </div>
                        @if (!string.IsNullOrEmpty(user.Section))
                        {
                            <div class="col-md-12">
                                <label class="form-label text-muted">Section</label>
                                <p class="info-text">@user.Section</p>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(user.RoleCategory))
                        {
                            <div class="col-md-12">
                                <label class="form-label text-muted">Divisi</label>
                                <p class="info-text">@user.RoleCategory</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    // Parameter dari URL
    [Parameter]
    public string Id { get; set; } = default!;

    // Properti State
    private User? user;
    private bool isLoading = true;
    private string? previousId;

    // Konstanta
    private string webUserRoot = string.Empty;
    private const string NO_IMAGE_PATH = "/noimg.png";
    private const string USER_LIST_PATH = "./UserList";

    // Metode Lifecycle
    protected override async Task OnInitializedAsync()
    {
        await LoadConfigurationAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != previousId)
        {
            isLoading = true;
            previousId = Id;
            await LoadUserAsync();
        }
    }

    // Metode Bantuan (Helper Methods)
    private async Task LoadConfigurationAsync()
    {
        try
        {
            webUserRoot = Configuration.GetValue<string>("WebUserRoot") ?? "/";
        }
        catch (Exception ex)
        {
            await NotificationService.AlertMessage("Gagal memuat konfigurasi `WebUserRoot`. Silakan hubungi Administrator.");
            NotificationService.LogMessage($"Gagal memuat konfigurasi `WebUserRoot`: {ex}");
        }
    }

    private async Task LoadUserAsync()
    {
        user = await CRUDService.ReadSingleAsync<User, string>(Id);
        isLoading = false;

        if (!string.IsNullOrEmpty(CRUDService.CRUDErrorMessage))
        {
            await NotificationService.AlertMessage($"Gagal memuat data pengguna: {CRUDService.CRUDErrorMessage}");
            NotificationService.LogMessage($"Gagal memuat data pengguna dengan ID {Id}: {CRUDService.CRUDErrorMessage}");
        }
    }

    private string CreateFilePath(string? relativePath)
    {
        if (string.IsNullOrWhiteSpace(relativePath))
        {
            return NO_IMAGE_PATH;
        }
        string fullPath = Path.Combine(webUserRoot, relativePath);
        return fullPath.Replace("\\", "/");
    }

    // Navigasi

    private void NavigateToUserList()
    {
        NavigationManager.NavigateTo(USER_LIST_PATH);
    }
}