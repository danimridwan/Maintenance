@page "/PPMList"

@using MaintenanceWebApp.Data
@using Microsoft.EntityFrameworkCore
@inject DataContext DataContext
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-6">
        <h3>PPM Task List</h3>
    </div>
    <div class="col-6">
        <button class="btn btn-outline-primary btn-xs float-end" @onclick="() => AddPPMTask()">New Task</button>
    </div>
</div><br>


@if (PPMTasks.Count != 0)
{
    <table class="table table-striped">
        <thead>
            <tr class="table-dark">
                <th>PPM ID</th>
                <th class="text-center">Request Date</th>
                <th class="text-center">Requestor</th>
                <th class="text-center">Division</th>
                <th class="text-center">Work Type</th>
                <th class="text-center">Status</th>
                <th class="text-center">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ppmTask in PPMTasks)
            {
                <tr>
                    <td>@ppmTask.TaskID</td>
                    <td class="text-center">@ppmTask.RequestDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center">@ppmTask.Requestor</td>
                    <td class="text-center">@ppmTask.Division</td>
                    <td class="text-center">@ppmTask.WorkType</td>
                    <td>
                        
                            @if (ppmTask.Status == StatusEnum.Request)
                            {
                                <div class="btn btn-danger">@ppmTask.Status</div>
                            }
                            else if (ppmTask.Status == StatusEnum.InProgress)
                            {
                                <div class="btn btn-warning">@ppmTask.Status</div>
                            }
                            else if (ppmTask.Status == StatusEnum.Completed || ppmTask.Status == StatusEnum.CompletedwithNotes)
                            {
                                <div class="btn btn-success">@ppmTask.Status</div>
                            }
                            else
                            {
                                <div class="btn btn-info">@ppmTask.Status</div>
                            }
                        
                    </td>
                    <td class="text-center">
                        @if (ppmTask.Status == StatusEnum.Request)
                        {
                            <button class="btn btn-info" @onclick="() => EditPPMTask(ppmTask)"><span class="oi oi-pencil"></span></button>
                            <button class="btn btn-danger" @onclick="() => DeletePPMTask(ppmTask)"><span class="oi oi-trash"></span></button>
                        }
                        else if (ppmTask.Status == StatusEnum.InProgress)
                        {
                            <button class="btn btn-success" @onclick="() => CompletePPMTask(ppmTask)"><span class="oi oi-check"></span></button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No Tasks Found.</p>
}


@code {
    private List<PPMTask> PPMTasks { get; set; } = new List<PPMTask>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        PPMTasks = await DataContext.PPMTasks.ToListAsync();
    }

    private void AddPPMTask()
    {
        NavigationManager.NavigateTo($"/AddPPMTask/");
    }

    private void EditPPMTask(PPMTask ppmTask)
    {
        NavigationManager.NavigateTo($"/EditPPMTask/{ppmTask.TaskID}");
    }

    private void CompletePPMTask(PPMTask ppmTask)
    {
        NavigationManager.NavigateTo($"/CompletePPMTask/{ppmTask.TaskID}");
    }

    private void DeletePPMTask(PPMTask ppmTask)
    {
        NavigationManager.NavigateTo($"/DeletePPMTask/{ppmTask.TaskID}");
    }
}
