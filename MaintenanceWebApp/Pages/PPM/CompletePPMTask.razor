@page "/CompletePPMTask/{PPMTaskID}"

@using MaintenanceWebApp.Data
@using Microsoft.EntityFrameworkCore
@inject DataContext DataContext
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager		
@inject IConfiguration Configuration

<div class="card">

	@if (ppmTask != null){
		<div class="card-header bg-light border-primary">
			Request
		</div>
		<div class="card-body">

                <table width="100%">
                    <tr>
                        <td class="td-first">Task ID</td>
                        <td> : </td>
                        <td class="td-last">@ppmTask.TaskID</td>
                    </tr>
                    <tr>
                        <td class="td-first">Requestor</td>
                        <td> : </td>
                        <td class="td-last">@ppmTask.Requestor</td>
                    </tr>
                    <tr>
                        <td class="td-first">Division</td>
                        <td> : </td>
                        <td class="td-last">@ppmTask.Division</td>
                    </tr>
                    <tr>
                        <td class="td-first">Target Completion</td>
                        <td> : </td>
                        <td class="td-last">@ppmTask.TargetDate.ToString("dd/MM/yyyy")</td>
                    </tr>
                </table><br />

                <b>Job Description</b><br />
                <label>@ppmTask.JobDesc</label><br /><br />

                <b>Photo (Before)</b><br />
                @if (string.IsNullOrWhiteSpace(ppmTask.Photo) == false)
                {
                    <img style="align-content:center;" width="100%" src="@CreateWebPath(ppmTask.Photo)" alt="ppmTask Photo">
                }
                else{
                    <div class="icon">
                        <span class="oi oi-image"></span><br>
                        No Image Available
                    </div>
                }<br />

                <b>TMD Notes</b><br />
                <label>@ppmTask.Notes</label>

		</div>

        <div class="card-header bg-light border-primary">
			Execution
		</div>
		<div class="card-body">

            <table width="100%">
                <tr>
                    <td class="td-first">Relevance to the target</td>
                    <td> : </td>
                    <td class="td-last">@ppmTask.TargetCompletion</td>
                </tr>
                <tr>
                    <td class="td-first">Evaluation</td>
                    <td> : </td>
                    <td class="td-last">@ppmTask.Evaluation</td>
                </tr>
            </table><br />

            <b>Photo (After)</b><br />
            @if (string.IsNullOrWhiteSpace(ppmTask.Photo) == false)
            {
                <img style="align-content:center;" width="100%" src="@CreateWebPath(ppmTask.Photo)" alt="ppmTask Photo">
            }
            else{
                <div class="icon">
                    <span class="oi oi-image"></span><br>
                    No Image Available        
                </div>
            }<br />

            <b>Requestor Notes</b><br />
            <label>@ppmTask.RequestorNotes</label><br /><br />

        </div>
	}
	else
	{
		<p>Loading PPM information...</p>
	}
</div>

@code {
	private PPMTask ppmTask;
	[Parameter]
	public string PPMTaskID { get; set; }

	private List<Employee> Employees { get; set; } = new List<Employee>();

	private async Task LoadData()
	{
		Employees = await DataContext.Employees.ToListAsync();
	}

	private string CreateWebPath(string relativePath)
	{
		return Path.Combine(Configuration.GetValue<string>("WebStorageRoot")!, relativePath);
	}

    protected override async Task OnInitializedAsync()
	{
    
        ppmTask = await DataContext.PPMTasks.FindAsync(PPMTaskID);
        await LoadData();

		if (ppmTask == null)
        {
            NavigationManager.NavigateTo("/PPMList", forceLoad: true);
        }
    }

    private async Task UpdatePPM()
    {
        DataContext.PPMTasks.Update(ppmTask);
        await DataContext.SaveChangesAsync();

        NavigationManager.NavigateTo("/PPMList");
    }
}
